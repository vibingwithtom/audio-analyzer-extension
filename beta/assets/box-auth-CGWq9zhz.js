import{B as r}from"./google-auth-BlgHu3aB.js";class g{constructor(){this.isInitialized=!1,this.accessToken=null,this.userInfo=null}async init(){this.isInitialized||(console.log("[Box Auth] Init started at:",new Date().toISOString()),await this.handleOAuthCallback(),console.log("[Box Auth] Init completed at:",new Date().toISOString()),this.isInitialized=!0)}async handleOAuthCallback(){const a=new URLSearchParams(window.location.search);if(a.has("code")){console.log("[Box OAuth] Callback received at:",new Date().toISOString());const e=a.get("code"),o=a.get("state"),n=localStorage.getItem("box_oauth_state");if(!n||n!==o)return console.error("OAuth state mismatch"),!1;console.log("[Box OAuth] State verified, exchanging code at:",new Date().toISOString());try{const t=await fetch(`${r.PROXY_URL}?action=token&code=${encodeURIComponent(e)}`);if(console.log("[Box OAuth] Token exchange response at:",new Date().toISOString(),"Status:",t.status),!t.ok){const c=await t.text();throw console.error("[Box OAuth] Token exchange failed:",c),new Error(`Token exchange failed: ${t.status}`)}const s=await t.json(),i={access_token:s.access_token,refresh_token:s.refresh_token,expires_at:Date.now()+s.expires_in*1e3};return localStorage.setItem("box_token",JSON.stringify(i)),this.accessToken=s.access_token,localStorage.setItem("box_just_authenticated","true"),window.history.replaceState({},document.title,window.location.pathname),!0}catch(t){return console.error("Failed to exchange authorization code:",t),!1}}return!1}async signIn(){this.isInitialized||await this.init();const a=Math.random().toString(36).substring(2,15);localStorage.setItem("box_oauth_state",a);const e=new URL(r.AUTHORIZATION_URL);e.searchParams.append("client_id",r.CLIENT_ID),e.searchParams.append("response_type","code"),e.searchParams.append("redirect_uri",r.REDIRECT_URI),e.searchParams.append("state",a),window.location.href=e.toString()}async getValidToken(){const a=localStorage.getItem("box_token");if(a)try{const e=JSON.parse(a);if(e.expires_at>Date.now()+3e5)return this.accessToken=e.access_token,e}catch(e){console.warn("Invalid stored token:",e),localStorage.removeItem("box_token")}throw new Error("Not signed in to Box")}async getUserInfo(){const a=await this.getValidToken();try{const e=await fetch(`${r.API_URL}/users/me`,{headers:{Authorization:`Bearer ${a.access_token}`}});if(!e.ok)throw new Error(`Failed to get user info: ${e.status}`);const o=await e.json();return this.userInfo=o,o}catch(e){throw new Error(`Failed to get user info: ${e.message}`)}}async downloadFile(a,e=null){try{const o=await this.getValidToken();console.log("[Box Download] Token retrieved:",o?"Yes":"No","Expires at:",new Date(o.expires_at).toISOString());const n={Authorization:`Bearer ${o.access_token}`};console.log("[Box Download] Fetching metadata for file:",a);const t=await fetch(`${r.API_URL}/files/${a}`,{headers:n});if(!t.ok){const l=await t.text();throw console.error("[Box Download] Metadata fetch failed:",t.status,l),t.status===401?(this.signOut(),new Error("Session expired. Please sign in again.")):new Error(`Failed to get file metadata: ${t.status}`)}const s=await t.json();console.log("[Box Download] Metadata retrieved:",s.name),console.log("[Box Download] Downloading file content...");const i=await fetch(`${r.API_URL}/files/${a}/content`,{headers:n});if(!i.ok){const l=await i.text();throw console.error("[Box Download] File download failed:",i.status,l),new Error(`Failed to download file: ${i.status}`)}const c=await i.blob();return new File([c],s.name,{type:s.content_type||"audio/mpeg"})}catch(o){throw new Error(`Box download failed: ${o.message}`)}}async listAudioFilesInFolder(a,e=null){try{const o=`${r.API_URL}/folders/${a}/items?fields=id,name,type,size,modified_at&limit=1000`;let n=`${r.PROXY_URL}?url=${encodeURIComponent(o)}`;if(e)n+=`&boxapi=${encodeURIComponent(e)}`;else{const d=await this.getValidToken();n+=`&token=${encodeURIComponent(d.access_token)}`}const t=await fetch(n);if(!t.ok)throw!e&&t.status===401?(this.signOut(),new Error("Session expired. Please sign in again.")):new Error(`Failed to list folder contents: ${t.status}`);const i=(await t.json()).entries||[],c=[".mp3",".wav",".flac",".aac",".m4a",".ogg"];return i.filter(d=>{if(d.type!=="file")return!1;const h=d.name.toLowerCase();return c.some(w=>h.endsWith(w))})}catch(o){throw new Error(`Failed to list folder: ${o.message}`)}}async listFilesInFolder(a,e,o=null){try{const n={};if(o)n.BoxApi=`shared_link=${o}`;else{const l=await this.getValidToken();n.Authorization=`Bearer ${l.access_token}`}const t=await fetch(`${r.API_URL}/folders/${a}/items?fields=id,name,type&limit=1000`,{headers:n});if(!t.ok)throw!o&&t.status===401?(this.signOut(),new Error("Session expired. Please sign in again.")):new Error(`Failed to list folder contents: ${t.status}`);let c=((await t.json()).entries||[]).filter(l=>l.type==="file");return e&&(c=c.filter(l=>l.name.toLowerCase().endsWith(e.toLowerCase()))),c}catch(n){throw new Error(`Failed to list folder: ${n.message}`)}}async downloadFileHeaders(a,e=102400,o=null){try{const n={Range:`bytes=0-${e-1}`};if(o)n.BoxApi=`shared_link=${o}`;else{const s=await this.getValidToken();n.Authorization=`Bearer ${s.access_token}`}const t=await fetch(`${r.API_URL}/files/${a}/content`,{headers:n});if(!t.ok&&t.status!==206)throw new Error(`Failed to download file headers: ${t.status}`);return await t.blob()}catch(n){throw new Error(`Failed to download headers: ${n.message}`)}}async getFileMetadata(a,e=null){try{const o={};if(e)o.BoxApi=`shared_link=${e}`;else{const t=await this.getValidToken();o.Authorization=`Bearer ${t.access_token}`}const n=await fetch(`${r.API_URL}/files/${a.id}?fields=id,name,size,modified_at,content_type`,{headers:o});if(!n.ok)throw!e&&n.status===401?(this.signOut(),new Error("Session expired. Please sign in again.")):new Error(`Failed to get file metadata: ${n.status}`);return await n.json()}catch(o){throw new Error(`Box metadata fetch failed: ${o.message}`)}}signOut(){this.accessToken=null,this.userInfo=null,localStorage.removeItem("box_token"),localStorage.removeItem("box_oauth_state")}isSignedIn(){const a=localStorage.getItem("box_token");if(!a)return!1;try{return JSON.parse(a).expires_at>Date.now()}catch{return!1}}}export{g as B};
