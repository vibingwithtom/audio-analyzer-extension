const d=window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1",w=window.location.pathname.startsWith("/beta"),l=d?"http://localhost:3000":w?"https://audio-analyzer.tinytech.site/beta":"https://audio-analyzer.tinytech.site",c={CLIENT_ID:"708688597317-bmmrje6hqg8vo52nctned54m32q8uhsr.apps.googleusercontent.com",REDIRECT_URI:l,SCOPE:"https://www.googleapis.com/auth/drive.readonly https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email",DISCOVERY_DOCS:["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest"]},g={CLIENT_ID:"0y78slky3xitt421wmoa0fjdz6fi14hn",REDIRECT_URI:l,AUTHORIZATION_URL:"https://account.box.com/api/oauth2/authorize",TOKEN_URL:"https://api.box.com/oauth2/token",API_URL:"https://api.box.com/2.0",PROXY_URL:"https://box-proxy-708688597317.us-central1.run.app"};class u{constructor(){this.isInitialized=!1,this.accessToken=null,this.codeClient=null,this.userInfo=null}async init(){if(!this.isInitialized)return new Promise((i,t)=>{this.loadGoogleAPI().then(()=>{this.initializeGIS().then(i).catch(t)}).catch(t)})}async loadGoogleAPI(){return new Promise((i,t)=>{if(window.gapi){i();return}const e=document.createElement("script");e.src="https://apis.google.com/js/api.js",e.onload=()=>i(),e.onerror=()=>t(new Error("Failed to load Google API script")),document.head.appendChild(e)})}async initializeGIS(){return new Promise((i,t)=>{const e=document.createElement("script");e.src="https://accounts.google.com/gsi/client",e.onload=()=>{this.setupGIS().then(i).catch(t)},e.onerror=()=>t(new Error("Failed to load Google Identity Services")),document.head.appendChild(e)})}async setupGIS(){return new Promise((i,t)=>{const e=setTimeout(()=>{t(new Error("Google API setup timeout"))},1e4);window.gapi.load("client",async()=>{try{clearTimeout(e),await window.gapi.client.init({discoveryDocs:c.DISCOVERY_DOCS}),this.tokenClient=window.google.accounts.oauth2.initTokenClient({client_id:c.CLIENT_ID,scope:c.SCOPE,callback:o=>{if(o.error){console.error("Token response error:",o),t(new Error(`Google sign-in failed: ${o.error}`));return}this.accessToken=o.access_token;const s={access_token:o.access_token,expires_at:Date.now()+o.expires_in*1e3,scope:o.scope};localStorage.setItem("google_token",JSON.stringify(s)),i(s)}}),this.isInitialized=!0,i()}catch(o){clearTimeout(e),console.error("Google API setup error:",o);let s="Unknown setup error";o&&typeof o=="object"?s=o.message||o.error||o.details||JSON.stringify(o):o&&(s=o.toString()),t(new Error(`Failed to setup Google API: ${s}`))}})})}async signIn(){return this.isInitialized||await this.init(),new Promise((i,t)=>{try{this.tokenClient.callback=e=>{if(e.error){console.error("Token response error:",e),t(new Error(`Google sign-in failed: ${e.error}`));return}if(!(e.scope&&e.scope.includes("https://www.googleapis.com/auth/drive.readonly"))){console.warn("Drive scope not granted, retrying with consent prompt"),this.tokenClient.requestAccessToken({prompt:"consent"});return}this.accessToken=e.access_token;const s={access_token:e.access_token,expires_at:Date.now()+e.expires_in*1e3,scope:e.scope};localStorage.setItem("google_token",JSON.stringify(s)),i(s)},this.tokenClient.requestAccessToken({prompt:""})}catch(e){console.error("Google sign-in error:",e);let o="Unknown sign-in error";e&&typeof e=="object"?o=e.error||e.message||e.details||JSON.stringify(e):e&&(o=e.toString()),t(new Error(`Google sign-in failed: ${o}`))}})}async getValidToken(){const i=localStorage.getItem("google_token");if(i)try{const t=JSON.parse(i);if(t.expires_at>Date.now()+3e5)return this.accessToken=t.access_token,t}catch(t){console.warn("Invalid stored token:",t),localStorage.removeItem("google_token")}return await this.signIn()}async getUserInfo(){const i=await this.getValidToken();try{const t=await fetch("https://www.googleapis.com/oauth2/v2/userinfo",{headers:{Authorization:`Bearer ${i.access_token}`}});if(!t.ok)throw new Error(`Failed to get user info: ${t.status}`);const e=await t.json();return this.userInfo=e,e}catch(t){throw new Error(`Failed to get user info: ${t.message}`)}}async downloadFile(i){const t=await this.getValidToken();try{const e=await fetch(`https://www.googleapis.com/drive/v3/files/${i}?fields=name,mimeType,size`,{headers:{Authorization:`Bearer ${t.access_token}`}});if(!e.ok)throw e.status===403?(this.signOut(),new Error("Insufficient permissions to access Google Drive. Please sign in again and grant Drive access.")):new Error(`Failed to get file metadata: ${e.status}`);const o=await e.json(),s=await fetch(`https://www.googleapis.com/drive/v3/files/${i}?alt=media`,{headers:{Authorization:`Bearer ${t.access_token}`}});if(!s.ok)throw new Error(`Failed to download file: ${s.status}`);const a=await s.blob();return new File([a],o.name,{type:o.mimeType||"audio/mpeg"})}catch(e){throw new Error(`Google Drive download failed: ${e.message}`)}}async listAudioFilesInFolder(i){const t=await this.getValidToken();try{const o=["audio/mpeg","audio/wav","audio/x-wav","audio/wave","audio/flac","audio/x-flac","audio/aac","audio/mp4","audio/ogg","audio/x-m4a"].map(n=>`mimeType='${n}'`).join(" or "),s=`'${i}' in parents and (${o}) and trashed=false`,a=await fetch(`https://www.googleapis.com/drive/v3/files?q=${encodeURIComponent(s)}&fields=files(id,name,mimeType,size,modifiedTime,videoMediaMetadata)&pageSize=1000`,{headers:{Authorization:`Bearer ${t.access_token}`}});if(!a.ok)throw a.status===403?(this.signOut(),new Error("Insufficient permissions to access Google Drive folder. Please sign in again.")):new Error(`Failed to list folder contents: ${a.status}`);return(await a.json()).files||[]}catch(e){throw new Error(`Failed to list folder: ${e.message}`)}}async listFilesInFolder(i,t){const e=await this.getValidToken();try{const o=`'${i}' in parents and trashed=false`,s=await fetch(`https://www.googleapis.com/drive/v3/files?q=${encodeURIComponent(o)}&fields=files(id,name,mimeType)&pageSize=1000`,{headers:{Authorization:`Bearer ${e.access_token}`}});if(!s.ok)throw s.status===403?(this.signOut(),new Error("Insufficient permissions to access Google Drive folder. Please sign in again.")):new Error(`Failed to list folder contents: ${s.status}`);const r=(await s.json()).files||[];return t?r.filter(n=>n.name.toLowerCase().endsWith(t.toLowerCase())):r}catch(o){throw new Error(`Failed to list folder: ${o.message}`)}}async downloadFileHeaders(i,t=102400){const e=await this.getValidToken();try{const o=await fetch(`https://www.googleapis.com/drive/v3/files/${i}?alt=media`,{headers:{Authorization:`Bearer ${e.access_token}`,Range:`bytes=0-${t-1}`}});if(!o.ok&&o.status!==206)throw new Error(`Failed to download file headers: ${o.status}`);return await o.blob()}catch(o){throw new Error(`Failed to download headers: ${o.message}`)}}async getFileMetadata(i){if(i.videoMediaMetadata)return i;const t=await this.getValidToken();try{const e=await fetch(`https://www.googleapis.com/drive/v3/files/${i.id}?fields=name,mimeType,size,modifiedTime,videoMediaMetadata`,{headers:{Authorization:`Bearer ${t.access_token}`}});if(!e.ok)throw e.status===403?(this.signOut(),new Error("Insufficient permissions to access Google Drive. Please sign in again and grant Drive access.")):new Error(`Failed to get file metadata: ${e.status}`);return await e.json()}catch(e){throw new Error(`Google Drive metadata fetch failed: ${e.message}`)}}signOut(){this.accessToken&&window.google&&window.google.accounts.oauth2.revoke(this.accessToken),this.accessToken=null,localStorage.removeItem("google_token")}isSignedIn(){const i=localStorage.getItem("google_token");if(!i)return!1;try{return JSON.parse(i).expires_at>Date.now()}catch{return!1}}}export{g as B,u as G};
